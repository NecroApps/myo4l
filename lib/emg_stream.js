// Generated by CoffeeScript 1.8.0
(function() {
  var EMG, EventEmitter,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  EventEmitter = require('events').EventEmitter;

  EMG = (function(_super) {
    __extends(EMG, _super);

    function EMG(opt) {
      this.newData = __bind(this.newData, this);
      EMG.__super__.constructor.apply(this, arguments);
    }

    EMG.prototype.newData = function(raw) {
      return this.emit('data', raw);
    };

    return EMG;

  })(EventEmitter);

  module.exports = EMG;

}).call(this);
